version: '3'


services:

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    env_file:
      - .env

  db:
    restart: always
    image: postgres
    container_name: db
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: app
    build: .
    tty: true
    command: bash -c "python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

  celery:
    container_name: celery
    build: .
    tty: true
    command: celery -A config worker -l INFO
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - redis
      - app

  celery_beat:
    container_name: celery_beat
    build: .
    tty: true
    command: sh - c "sleep 5 && celery -A config beat -l info -S django"
    depends_on:
      - redis
      - app

volumes:
  postgres_data:
  redis_data:
